<?
class Whip_model extends CI_Model {


	function __construct()
	{
		parent::__construct();
	}
	
	function sendrequest($server_url,$request_params)
	{
		$result = file_get_contents($server_url."?".$request_params);
		return $result;
	}
	
	function curl($server_url,$request_params)
	{
		$req = curl_init($server_url);
		// Using the cURL extension to send it off,  first creating a custom header block
		$headers = array();
		array_push($headers,'Content-Type: application/xml');
		array_push($headers,'Content-Length: '.strlen($request_params));
		array_push($headers,'\r\n');
		//URL to post to
		curl_setopt($req, CURLOPT_URL, $server_url);
		//Setting options for a secure SSL based xmlrpc server
		curl_setopt($req, CURLOPT_SSL_VERIFYPEER, false);
		curl_setopt($req, CURLOPT_SSL_VERIFYHOST, 2);
		curl_setopt($req, CURLOPT_CUSTOMREQUEST, 'POST');
		curl_setopt($req, CURLOPT_RETURNTRANSFER, 1 );
		curl_setopt($req, CURLOPT_HTTPHEADER, $headers );
		curl_setopt( $req, CURLOPT_POSTFIELDS, $request_params );
		//Finally run
		$response = curl_exec($req);
		//Close the cURL connection
		curl_close($req);
		//Decoding the response to be displayed
		return $response =  xmlrpc_decode($response);
	}
	
	function sendCurl($serverurl,$parameters)
	{
		$ch=curl_init();
		curl_setopt($ch,CURLOPT_URL,$serverurl);
		curl_setopt($ch,CURLOPT_POST,1);
		curl_setopt($ch,CURLOPT_POSTFIELDS,$parameters);
		curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,  2);
		$data = curl_exec($ch);
		curl_close($ch);
		return $data;
	}
	
}
?>